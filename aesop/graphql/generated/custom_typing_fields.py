# Generated by ariadne-codegen

from .base_operation import GraphQLField


class AISearchQueryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AISearchQueryGraphQLField":
        self._alias = alias
        return self


class AcknowledgeChangeRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AcknowledgeChangeRequestGraphQLField":
        self._alias = alias
        return self


class ActivityDependencyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ActivityDependencyGraphQLField":
        self._alias = alias
        return self


class ActivityFeedConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ActivityFeedConnectionGraphQLField":
        self._alias = alias
        return self


class ActivityFeedEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ActivityFeedEdgeGraphQLField":
        self._alias = alias
        return self


class AggregationBucketGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AggregationBucketGraphQLField":
        self._alias = alias
        return self


class AggregationMetadataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AggregationMetadataGraphQLField":
        self._alias = alias
        return self


class AnchorEntityLabelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AnchorEntityLabelGraphQLField":
        self._alias = alias
        return self


class ApiKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyGraphQLField":
        self._alias = alias
        return self


class ApiKeyBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyBaseGraphQLField":
        self._alias = alias
        return self


class ApiKeyDeletionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyDeletionPayloadGraphQLField":
        self._alias = alias
        return self


class ApiKeyInputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyInputGraphQLField":
        self._alias = alias
        return self


class AspectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AspectGraphQLField":
        self._alias = alias
        return self


class AssetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetGraphQLField":
        self._alias = alias
        return self


class AssetConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetConnectionGraphQLField":
        self._alias = alias
        return self


class AssetContactsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetContactsGraphQLField":
        self._alias = alias
        return self


class AssetDescriptionKnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetDescriptionKnowledgeCardGraphQLField":
        self._alias = alias
        return self


class AssetDescriptionTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetDescriptionTokenizedContentGraphQLField":
        self._alias = alias
        return self


class AssetDocumentAggregationBucketGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetDocumentAggregationBucketGraphQLField":
        self._alias = alias
        return self


class AssetEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetEdgeGraphQLField":
        self._alias = alias
        return self


class AssetFollowersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetFollowersGraphQLField":
        self._alias = alias
        return self


class AssetLikesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetLikesGraphQLField":
        self._alias = alias
        return self


class AssetSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetSearchDocumentGraphQLField":
        self._alias = alias
        return self


class AssetSearchHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetSearchHighlightGraphQLField":
        self._alias = alias
        return self


class AssetSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetSearchResultGraphQLField":
        self._alias = alias
        return self


class AssetStructureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssetStructureGraphQLField":
        self._alias = alias
        return self


class AthenaQueryResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AthenaQueryResultGraphQLField":
        self._alias = alias
        return self


class AthenaResultRowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AthenaResultRowGraphQLField":
        self._alias = alias
        return self


class AuditStampGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AuditStampGraphQLField":
        self._alias = alias
        return self


class AuthorizationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AuthorizationGraphQLField":
        self._alias = alias
        return self


class AutoGeneratedDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoGeneratedDocumentGraphQLField":
        self._alias = alias
        return self


class AzureAdSSOGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AzureAdSSOGraphQLField":
        self._alias = alias
        return self


class AzureDataFactoryActivityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AzureDataFactoryActivityGraphQLField":
        self._alias = alias
        return self


class AzureDataFactoryPipelineGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AzureDataFactoryPipelineGraphQLField":
        self._alias = alias
        return self


class BrowsePathGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrowsePathGraphQLField":
        self._alias = alias
        return self


class BrowsePathSegmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrowsePathSegmentGraphQLField":
        self._alias = alias
        return self


class ChangeRequestKnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeRequestKnowledgeCardGraphQLField":
        self._alias = alias
        return self


class ChangeRequestTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeRequestTokenizedContentGraphQLField":
        self._alias = alias
        return self


class ChartGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChartGraphQLField":
        self._alias = alias
        return self


class ChartQueryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChartQueryGraphQLField":
        self._alias = alias
        return self


class ColumnDescriptionKnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ColumnDescriptionKnowledgeCardGraphQLField":
        self._alias = alias
        return self


class CommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommentGraphQLField":
        self._alias = alias
        return self


class CommentTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommentTokenizedContentGraphQLField":
        self._alias = alias
        return self


class CommonColumnAttributesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommonColumnAttributesGraphQLField":
        self._alias = alias
        return self


class CommonColumnAttributesBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommonColumnAttributesBaseGraphQLField":
        self._alias = alias
        return self


class CrawlerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerGraphQLField":
        self._alias = alias
        return self


class CrawlerMetadataBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerMetadataBaseGraphQLField":
        self._alias = alias
        return self


class CrawlerRunGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerRunGraphQLField":
        self._alias = alias
        return self


class CrawlerRunMetadataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerRunMetadataGraphQLField":
        self._alias = alias
        return self


class CrawlerRunMetadataConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerRunMetadataConnectionGraphQLField":
        self._alias = alias
        return self


class CrawlerRunMetadataEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerRunMetadataEdgeGraphQLField":
        self._alias = alias
        return self


class CrawlerRunStatusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerRunStatusGraphQLField":
        self._alias = alias
        return self


class CrawlerScheduleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerScheduleGraphQLField":
        self._alias = alias
        return self


class CrawlerTypeResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrawlerTypeResponseGraphQLField":
        self._alias = alias
        return self


class CustomAttributesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomAttributesGraphQLField":
        self._alias = alias
        return self


class CustomDirectorySearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomDirectorySearchResultGraphQLField":
        self._alias = alias
        return self


class CustomMetadataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomMetadataGraphQLField":
        self._alias = alias
        return self


class CustomMetadataConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomMetadataConfigGraphQLField":
        self._alias = alias
        return self


class CustomMetadataItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomMetadataItemGraphQLField":
        self._alias = alias
        return self


class CustomSortableNamedAssetCollectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomSortableNamedAssetCollectionGraphQLField":
        self._alias = alias
        return self


class CustomSortableSavedLiveQueryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomSortableSavedLiveQueryGraphQLField":
        self._alias = alias
        return self


class CustomTagAttributesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomTagAttributesGraphQLField":
        self._alias = alias
        return self


class DashboardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardGraphQLField":
        self._alias = alias
        return self


class DashboardConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardConnectionGraphQLField":
        self._alias = alias
        return self


class DashboardEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardEdgeGraphQLField":
        self._alias = alias
        return self


class DashboardHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardHighlightGraphQLField":
        self._alias = alias
        return self


class DashboardInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardInfoGraphQLField":
        self._alias = alias
        return self


class DashboardLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardLogicalIdGraphQLField":
        self._alias = alias
        return self


class DashboardSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardSearchDocumentGraphQLField":
        self._alias = alias
        return self


class DashboardSearchInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardSearchInfoGraphQLField":
        self._alias = alias
        return self


class DashboardSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DashboardSearchResultGraphQLField":
        self._alias = alias
        return self


class DataDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataDocumentGraphQLField":
        self._alias = alias
        return self


class DataDocumentSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataDocumentSearchResultGraphQLField":
        self._alias = alias
        return self


class DataDocumentTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataDocumentTokenizedContentGraphQLField":
        self._alias = alias
        return self


class DataGroupSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataGroupSearchResultGraphQLField":
        self._alias = alias
        return self


class DataMonitorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataMonitorGraphQLField":
        self._alias = alias
        return self


class DataMonitorTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataMonitorTargetGraphQLField":
        self._alias = alias
        return self


class DataQualityStatusSourceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataQualityStatusSourceGraphQLField":
        self._alias = alias
        return self


class DatasetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetGraphQLField":
        self._alias = alias
        return self


class DatasetColumnsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetColumnsGraphQLField":
        self._alias = alias
        return self


class DatasetConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetConnectionGraphQLField":
        self._alias = alias
        return self


class DatasetDataQualityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetDataQualityGraphQLField":
        self._alias = alias
        return self


class DatasetDocumentationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetDocumentationGraphQLField":
        self._alias = alias
        return self


class DatasetEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetEdgeGraphQLField":
        self._alias = alias
        return self


class DatasetFieldAssociationsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetFieldAssociationsGraphQLField":
        self._alias = alias
        return self


class DatasetFieldStatisticsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetFieldStatisticsGraphQLField":
        self._alias = alias
        return self


class DatasetHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetHighlightGraphQLField":
        self._alias = alias
        return self


class DatasetLastQueryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetLastQueryGraphQLField":
        self._alias = alias
        return self


class DatasetLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetLogicalIdGraphQLField":
        self._alias = alias
        return self


class DatasetPatternGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetPatternGraphQLField":
        self._alias = alias
        return self


class DatasetSchemaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetSchemaGraphQLField":
        self._alias = alias
        return self


class DatasetSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetSearchDocumentGraphQLField":
        self._alias = alias
        return self


class DatasetSearchInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetSearchInfoGraphQLField":
        self._alias = alias
        return self


class DatasetSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetSearchResultGraphQLField":
        self._alias = alias
        return self


class DatasetStatisticsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetStatisticsGraphQLField":
        self._alias = alias
        return self


class DatasetStructureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetStructureGraphQLField":
        self._alias = alias
        return self


class DatasetUsageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetUsageGraphQLField":
        self._alias = alias
        return self


class DbtMacroGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtMacroGraphQLField":
        self._alias = alias
        return self


class DbtMacroArgumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtMacroArgumentGraphQLField":
        self._alias = alias
        return self


class DbtMaterializationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtMaterializationGraphQLField":
        self._alias = alias
        return self


class DbtMetadataItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtMetadataItemGraphQLField":
        self._alias = alias
        return self


class DbtMetricGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtMetricGraphQLField":
        self._alias = alias
        return self


class DbtModelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtModelGraphQLField":
        self._alias = alias
        return self


class DbtModelSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtModelSearchResultGraphQLField":
        self._alias = alias
        return self


class DbtTestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbtTestGraphQLField":
        self._alias = alias
        return self


class DeleteCrawlersResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteCrawlersResponseGraphQLField":
        self._alias = alias
        return self


class DeleteWebhookResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteWebhookResponseGraphQLField":
        self._alias = alias
        return self


class DeprecationKnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeprecationKnowledgeCardGraphQLField":
        self._alias = alias
        return self


class DeprecationTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeprecationTokenizedContentGraphQLField":
        self._alias = alias
        return self


class DerivedAssetDescriptionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DerivedAssetDescriptionsGraphQLField":
        self._alias = alias
        return self


class DesignatedContactGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DesignatedContactGraphQLField":
        self._alias = alias
        return self


class EntityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EntityGraphQLField":
        self._alias = alias
        return self


class EntityConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EntityConnectionGraphQLField":
        self._alias = alias
        return self


class EntityCountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EntityCountGraphQLField":
        self._alias = alias
        return self


class EntityEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EntityEdgeGraphQLField":
        self._alias = alias
        return self


class EntityLineageConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EntityLineageConnectionGraphQLField":
        self._alias = alias
        return self


class EntityLineageEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EntityLineageEdgeGraphQLField":
        self._alias = alias
        return self


class EntityUpstreamGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EntityUpstreamGraphQLField":
        self._alias = alias
        return self


class FieldDocumentationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FieldDocumentationGraphQLField":
        self._alias = alias
        return self


class FieldMappingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FieldMappingGraphQLField":
        self._alias = alias
        return self


class FieldPathPermissionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FieldPathPermissionGraphQLField":
        self._alias = alias
        return self


class FieldQueryCountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FieldQueryCountGraphQLField":
        self._alias = alias
        return self


class FieldQueryCountsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FieldQueryCountsGraphQLField":
        self._alias = alias
        return self


class FieldStatisticsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FieldStatisticsGraphQLField":
        self._alias = alias
        return self


class FieldTagAssociationsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FieldTagAssociationsGraphQLField":
        self._alias = alias
        return self


class FiveTranConnectorStatusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FiveTranConnectorStatusGraphQLField":
        self._alias = alias
        return self


class FivetranPipelineGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FivetranPipelineGraphQLField":
        self._alias = alias
        return self


class FollowOrUnfollowOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FollowOrUnfollowOutputGraphQLField":
        self._alias = alias
        return self


class ForeignKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ForeignKeyGraphQLField":
        self._alias = alias
        return self


class GeneratedAssetDescriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GeneratedAssetDescriptionGraphQLField":
        self._alias = alias
        return self


class GeneratedFieldDescriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GeneratedFieldDescriptionGraphQLField":
        self._alias = alias
        return self


class GoogleSocialLoginGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GoogleSocialLoginGraphQLField":
        self._alias = alias
        return self


class GoogleWorkspaceSSOGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GoogleWorkspaceSSOGraphQLField":
        self._alias = alias
        return self


class GovernedEntityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GovernedEntityGraphQLField":
        self._alias = alias
        return self


class GroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupGraphQLField":
        self._alias = alias
        return self


class GroupBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupBaseGraphQLField":
        self._alias = alias
        return self


class GroupConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupConnectionGraphQLField":
        self._alias = alias
        return self


class GroupDescriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupDescriptionGraphQLField":
        self._alias = alias
        return self


class GroupEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupEdgeGraphQLField":
        self._alias = alias
        return self


class GroupHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupHighlightGraphQLField":
        self._alias = alias
        return self


class GroupInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupInfoGraphQLField":
        self._alias = alias
        return self


class GroupInfoBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupInfoBaseGraphQLField":
        self._alias = alias
        return self


class GroupLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupLogicalIdGraphQLField":
        self._alias = alias
        return self


class GroupSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupSearchDocumentGraphQLField":
        self._alias = alias
        return self


class GroupSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupSearchResultGraphQLField":
        self._alias = alias
        return self


class HardDeletionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HardDeletionGraphQLField":
        self._alias = alias
        return self


class HashtagGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HashtagGraphQLField":
        self._alias = alias
        return self


class HierarchyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HierarchyGraphQLField":
        self._alias = alias
        return self


class HierarchyConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HierarchyConnectionGraphQLField":
        self._alias = alias
        return self


class HierarchyEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HierarchyEdgeGraphQLField":
        self._alias = alias
        return self


class HierarchyInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HierarchyInfoGraphQLField":
        self._alias = alias
        return self


class HierarchyLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HierarchyLogicalIdGraphQLField":
        self._alias = alias
        return self


class HowToUseTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HowToUseTokenizedContentGraphQLField":
        self._alias = alias
        return self


class IncidentKnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IncidentKnowledgeCardGraphQLField":
        self._alias = alias
        return self


class IncidentTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IncidentTokenizedContentGraphQLField":
        self._alias = alias
        return self


class InformaticaMappingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InformaticaMappingGraphQLField":
        self._alias = alias
        return self


class IntegrationsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IntegrationsGraphQLField":
        self._alias = alias
        return self


class InterestedPartyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InterestedPartyGraphQLField":
        self._alias = alias
        return self


class KeyValuePairGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KeyValuePairGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardBaseGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardConnectionGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardDeletePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardDeletePayloadGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardDetailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardDetailGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardEdgeGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardHighlightGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardInfoGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardInfoBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardInfoBaseGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardInfoOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardInfoOutputGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardLogicalIdGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardSearchDocumentGraphQLField":
        self._alias = alias
        return self


class KnowledgeCardSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KnowledgeCardSearchResultGraphQLField":
        self._alias = alias
        return self


class LDAPGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LDAPGraphQLField":
        self._alias = alias
        return self


class LDAPGroupSearchGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LDAPGroupSearchGraphQLField":
        self._alias = alias
        return self


class LDAPUserSearchGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LDAPUserSearchGraphQLField":
        self._alias = alias
        return self


class LinkedInSocialLoginGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkedInSocialLoginGraphQLField":
        self._alias = alias
        return self


class LogicalIdUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "LogicalIdUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "LogicalIdUnion":
        self._alias = alias
        return self


class LookerExploreGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerExploreGraphQLField":
        self._alias = alias
        return self


class LookerExploreFilterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerExploreFilterGraphQLField":
        self._alias = alias
        return self


class LookerExploreJoinGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerExploreJoinGraphQLField":
        self._alias = alias
        return self


class LookerExploreSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerExploreSearchResultGraphQLField":
        self._alias = alias
        return self


class LookerViewGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerViewGraphQLField":
        self._alias = alias
        return self


class LookerViewDimensionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerViewDimensionGraphQLField":
        self._alias = alias
        return self


class LookerViewFilterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerViewFilterGraphQLField":
        self._alias = alias
        return self


class LookerViewMeasureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerViewMeasureGraphQLField":
        self._alias = alias
        return self


class LookerViewQueryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerViewQueryGraphQLField":
        self._alias = alias
        return self


class LookerViewSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LookerViewSearchResultGraphQLField":
        self._alias = alias
        return self


class MetabaseCollectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetabaseCollectionGraphQLField":
        self._alias = alias
        return self


class MetricGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricGraphQLField":
        self._alias = alias
        return self


class MetricBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricBaseGraphQLField":
        self._alias = alias
        return self


class MetricConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricConnectionGraphQLField":
        self._alias = alias
        return self


class MetricEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricEdgeGraphQLField":
        self._alias = alias
        return self


class MetricFilterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricFilterGraphQLField":
        self._alias = alias
        return self


class MetricInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricInfoGraphQLField":
        self._alias = alias
        return self


class MetricInfoBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricInfoBaseGraphQLField":
        self._alias = alias
        return self


class MetricLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricLogicalIdGraphQLField":
        self._alias = alias
        return self


class MetricSearchInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricSearchInfoGraphQLField":
        self._alias = alias
        return self


class MetricSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricSearchResultGraphQLField":
        self._alias = alias
        return self


class MicrosoftSocialLoginGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MicrosoftSocialLoginGraphQLField":
        self._alias = alias
        return self


class NamespaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceGraphQLField":
        self._alias = alias
        return self


class NamespaceAssetsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceAssetsGraphQLField":
        self._alias = alias
        return self


class NamespaceBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceBaseGraphQLField":
        self._alias = alias
        return self


class NamespaceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceConnectionGraphQLField":
        self._alias = alias
        return self


class NamespaceDeletePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceDeletePayloadGraphQLField":
        self._alias = alias
        return self


class NamespaceDescriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceDescriptionGraphQLField":
        self._alias = alias
        return self


class NamespaceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceEdgeGraphQLField":
        self._alias = alias
        return self


class NamespaceHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceHighlightGraphQLField":
        self._alias = alias
        return self


class NamespaceInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceInfoGraphQLField":
        self._alias = alias
        return self


class NamespaceInfoBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceInfoBaseGraphQLField":
        self._alias = alias
        return self


class NamespaceLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceLogicalIdGraphQLField":
        self._alias = alias
        return self


class NamespaceSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceSearchDocumentGraphQLField":
        self._alias = alias
        return self


class NamespaceSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceSearchResultGraphQLField":
        self._alias = alias
        return self


class NamespaceSummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceSummaryGraphQLField":
        self._alias = alias
        return self


class NamespaceTypeDetailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceTypeDetailGraphQLField":
        self._alias = alias
        return self


class NamespaceTypeDetailBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NamespaceTypeDetailBaseGraphQLField":
        self._alias = alias
        return self


class NodeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NodeGraphQLField":
        self._alias = alias
        return self


class NonProdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NonProdGraphQLField":
        self._alias = alias
        return self


class OIDCGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OIDCGraphQLField":
        self._alias = alias
        return self


class OktaSSOGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OktaSSOGraphQLField":
        self._alias = alias
        return self


class OnboardingEmailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OnboardingEmailGraphQLField":
        self._alias = alias
        return self


class OnboardingExperienceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OnboardingExperienceGraphQLField":
        self._alias = alias
        return self


class OrderedEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrderedEntryGraphQLField":
        self._alias = alias
        return self


class OrganizationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationGraphQLField":
        self._alias = alias
        return self


class OverallDataQualityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OverallDataQualityGraphQLField":
        self._alias = alias
        return self


class PageInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PageInfoGraphQLField":
        self._alias = alias
        return self


class PersonGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonGraphQLField":
        self._alias = alias
        return self


class PersonActivityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonActivityGraphQLField":
        self._alias = alias
        return self


class PersonConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonConnectionGraphQLField":
        self._alias = alias
        return self


class PersonDetailsInterfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonDetailsInterfaceGraphQLField":
        self._alias = alias
        return self


class PersonEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonEdgeGraphQLField":
        self._alias = alias
        return self


class PersonHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonHighlightGraphQLField":
        self._alias = alias
        return self


class PersonLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonLogicalIdGraphQLField":
        self._alias = alias
        return self


class PersonOrganizationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonOrganizationGraphQLField":
        self._alias = alias
        return self


class PersonPinsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonPinsGraphQLField":
        self._alias = alias
        return self


class PersonPinsPinningOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonPinsPinningOutputGraphQLField":
        self._alias = alias
        return self


class PersonPropertiesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonPropertiesGraphQLField":
        self._alias = alias
        return self


class PersonSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonSearchDocumentGraphQLField":
        self._alias = alias
        return self


class PersonSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonSearchResultGraphQLField":
        self._alias = alias
        return self


class PersonSlackProfileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonSlackProfileGraphQLField":
        self._alias = alias
        return self


class PersonalizationOptionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonalizationOptionsGraphQLField":
        self._alias = alias
        return self


class PersonalizationOptionsBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonalizationOptionsBaseGraphQLField":
        self._alias = alias
        return self


class PersonalizationTraitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PersonalizationTraitGraphQLField":
        self._alias = alias
        return self


class PipelineGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineGraphQLField":
        self._alias = alias
        return self


class PipelineHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineHighlightGraphQLField":
        self._alias = alias
        return self


class PipelineInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineInfoGraphQLField":
        self._alias = alias
        return self


class PipelineLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineLogicalIdGraphQLField":
        self._alias = alias
        return self


class PipelineMappingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineMappingGraphQLField":
        self._alias = alias
        return self


class PipelineSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineSearchDocumentGraphQLField":
        self._alias = alias
        return self


class PipelineSearchInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineSearchInfoGraphQLField":
        self._alias = alias
        return self


class PipelineSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PipelineSearchResultGraphQLField":
        self._alias = alias
        return self


class PowerBIColumnGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIColumnGraphQLField":
        self._alias = alias
        return self


class PowerBIDataflowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIDataflowGraphQLField":
        self._alias = alias
        return self


class PowerBIDatasetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIDatasetGraphQLField":
        self._alias = alias
        return self


class PowerBIDatasetParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIDatasetParameterGraphQLField":
        self._alias = alias
        return self


class PowerBIDatasetSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIDatasetSearchResultGraphQLField":
        self._alias = alias
        return self


class PowerBIDatasetTableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIDatasetTableGraphQLField":
        self._alias = alias
        return self


class PowerBIMeasureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIMeasureGraphQLField":
        self._alias = alias
        return self


class PowerBIRefreshScheduleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBIRefreshScheduleGraphQLField":
        self._alias = alias
        return self


class PowerBiAppGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiAppGraphQLField":
        self._alias = alias
        return self


class PowerBiEndorsementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiEndorsementGraphQLField":
        self._alias = alias
        return self


class PowerBiInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiInfoGraphQLField":
        self._alias = alias
        return self


class PowerBiSensitivityLabelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiSensitivityLabelGraphQLField":
        self._alias = alias
        return self


class PowerBiSubscriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiSubscriptionGraphQLField":
        self._alias = alias
        return self


class PowerBiSubscriptionUserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiSubscriptionUserGraphQLField":
        self._alias = alias
        return self


class PowerBiUserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiUserGraphQLField":
        self._alias = alias
        return self


class PowerBiWorkspaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiWorkspaceGraphQLField":
        self._alias = alias
        return self


class PowerBiWorkspaceUserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PowerBiWorkspaceUserGraphQLField":
        self._alias = alias
        return self


class PurgeDataQualityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PurgeDataQualityGraphQLField":
        self._alias = alias
        return self


class QueryCountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryCountGraphQLField":
        self._alias = alias
        return self


class QueryCountPercentileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryCountPercentileGraphQLField":
        self._alias = alias
        return self


class QueryCountsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryCountsGraphQLField":
        self._alias = alias
        return self


class QueryExplainerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryExplainerGraphQLField":
        self._alias = alias
        return self


class QueryExplainerTokenizedContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryExplainerTokenizedContentGraphQLField":
        self._alias = alias
        return self


class QueryInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryInfoGraphQLField":
        self._alias = alias
        return self


class QueryInfoConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryInfoConnectionGraphQLField":
        self._alias = alias
        return self


class QueryInfoEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryInfoEdgeGraphQLField":
        self._alias = alias
        return self


class QueryKnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryKnowledgeCardGraphQLField":
        self._alias = alias
        return self


class QueryResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueryResultGraphQLField":
        self._alias = alias
        return self


class QuickSightDatasetSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QuickSightDatasetSearchResultGraphQLField":
        self._alias = alias
        return self


class RecentUserActivitiesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecentUserActivitiesGraphQLField":
        self._alias = alias
        return self


class ResultRowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ResultRowGraphQLField":
        self._alias = alias
        return self


class RunCrawlerResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RunCrawlerResponseGraphQLField":
        self._alias = alias
        return self


class SAMLGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SAMLGraphQLField":
        self._alias = alias
        return self


class SQLExplainerResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SQLExplainerResultGraphQLField":
        self._alias = alias
        return self


class SSOGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SSOGraphQLField":
        self._alias = alias
        return self


class SampleSearchQuestionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SampleSearchQuestionGraphQLField":
        self._alias = alias
        return self


class SavedLiveQueryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedLiveQueryGraphQLField":
        self._alias = alias
        return self


class SchemaFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SchemaFieldGraphQLField":
        self._alias = alias
        return self


class SchemaFieldWithCommonAttributesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SchemaFieldWithCommonAttributesGraphQLField":
        self._alias = alias
        return self


class SearchQueryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SearchQueryGraphQLField":
        self._alias = alias
        return self


class SearchResultUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "SearchResultUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "SearchResultUnion":
        self._alias = alias
        return self


class SearchScoreDetailsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SearchScoreDetailsGraphQLField":
        self._alias = alias
        return self


class SearchStatisticsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SearchStatisticsResultGraphQLField":
        self._alias = alias
        return self


class SettingsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SettingsGraphQLField":
        self._alias = alias
        return self


class SetupInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetupInfoGraphQLField":
        self._alias = alias
        return self


class SimilarAssetsResultItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SimilarAssetsResultItemGraphQLField":
        self._alias = alias
        return self


class SnowflakeStreamInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SnowflakeStreamInfoGraphQLField":
        self._alias = alias
        return self


class SocialLoginGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SocialLoginGraphQLField":
        self._alias = alias
        return self


class SoftDeletionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SoftDeletionGraphQLField":
        self._alias = alias
        return self


class SourceFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SourceFieldGraphQLField":
        self._alias = alias
        return self


class SourceInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SourceInfoGraphQLField":
        self._alias = alias
        return self


class SparkJobGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SparkJobGraphQLField":
        self._alias = alias
        return self


class SqlSchemaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SqlSchemaGraphQLField":
        self._alias = alias
        return self


class StatusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusGraphQLField":
        self._alias = alias
        return self


class StreamPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StreamPayloadGraphQLField":
        self._alias = alias
        return self


class SuggestItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SuggestItemGraphQLField":
        self._alias = alias
        return self


class SuggestResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SuggestResultGraphQLField":
        self._alias = alias
        return self


class SystemContactGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemContactGraphQLField":
        self._alias = alias
        return self


class SystemContactsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemContactsGraphQLField":
        self._alias = alias
        return self


class SystemDescriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemDescriptionGraphQLField":
        self._alias = alias
        return self


class SystemTagGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemTagGraphQLField":
        self._alias = alias
        return self


class SystemTagCountsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemTagCountsGraphQLField":
        self._alias = alias
        return self


class SystemTagCountsConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemTagCountsConnectionGraphQLField":
        self._alias = alias
        return self


class SystemTagCountsEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemTagCountsEdgeGraphQLField":
        self._alias = alias
        return self


class SystemTagSourcesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemTagSourcesGraphQLField":
        self._alias = alias
        return self


class SystemTagsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemTagsGraphQLField":
        self._alias = alias
        return self


class TableColumnsUsageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TableColumnsUsageGraphQLField":
        self._alias = alias
        return self


class TableJoinGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TableJoinGraphQLField":
        self._alias = alias
        return self


class TableJoinScenarioGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TableJoinScenarioGraphQLField":
        self._alias = alias
        return self


class TableJoinsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TableJoinsGraphQLField":
        self._alias = alias
        return self


class TableauDatasourceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TableauDatasourceGraphQLField":
        self._alias = alias
        return self


class TableauDatasourceSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TableauDatasourceSearchResultGraphQLField":
        self._alias = alias
        return self


class TableauFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TableauFieldGraphQLField":
        self._alias = alias
        return self


class TenantInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantInfoGraphQLField":
        self._alias = alias
        return self


class ThoughtSpotColumnGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThoughtSpotColumnGraphQLField":
        self._alias = alias
        return self


class ThoughtSpotDataObjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThoughtSpotDataObjectGraphQLField":
        self._alias = alias
        return self


class ThoughtSpotDataObjectSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThoughtSpotDataObjectSearchResultGraphQLField":
        self._alias = alias
        return self


class ThoughtSpotInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThoughtSpotInfoGraphQLField":
        self._alias = alias
        return self


class ToggleMuteNotificationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToggleMuteNotificationOutputGraphQLField":
        self._alias = alias
        return self


class UnityCatalogGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnityCatalogGraphQLField":
        self._alias = alias
        return self


class UnityCatalogTableInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnityCatalogTableInfoGraphQLField":
        self._alias = alias
        return self


class UnityCatalogVolumeInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnityCatalogVolumeInfoGraphQLField":
        self._alias = alias
        return self


class UniversalSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UniversalSearchResultGraphQLField":
        self._alias = alias
        return self


class UpdateCrawlerScheduleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCrawlerScheduleGraphQLField":
        self._alias = alias
        return self


class UsageKnowledgeCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UsageKnowledgeCardGraphQLField":
        self._alias = alias
        return self


class UserActivityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserActivityGraphQLField":
        self._alias = alias
        return self


class UserActivityActorInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserActivityActorInfoGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceBaseGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceConnectionGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceDeletePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceDeletePayloadGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceDescriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceDescriptionGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceEdgeGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceHighlightGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceInfoGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceInfoBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceInfoBaseGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceLogicalIdGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceSearchDocumentGraphQLField":
        self._alias = alias
        return self


class UserDefinedResourceSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDefinedResourceSearchResultGraphQLField":
        self._alias = alias
        return self


class UserQueryCountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserQueryCountGraphQLField":
        self._alias = alias
        return self


class UserQueryCountsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserQueryCountsGraphQLField":
        self._alias = alias
        return self


class UserSpecifiedOrderingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserSpecifiedOrderingGraphQLField":
        self._alias = alias
        return self


class VersionHistoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VersionHistoryGraphQLField":
        self._alias = alias
        return self


class VersionHistoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VersionHistoryConnectionGraphQLField":
        self._alias = alias
        return self


class VersionHistoryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VersionHistoryEdgeGraphQLField":
        self._alias = alias
        return self


class ViewActivityConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ViewActivityConnectionGraphQLField":
        self._alias = alias
        return self


class ViewActivityEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ViewActivityEdgeGraphQLField":
        self._alias = alias
        return self


class ViewedByConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ViewedByConnectionGraphQLField":
        self._alias = alias
        return self


class ViewedByEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ViewedByEdgeGraphQLField":
        self._alias = alias
        return self


class ViewerPermissionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ViewerPermissionsGraphQLField":
        self._alias = alias
        return self


class VirtualViewGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewGraphQLField":
        self._alias = alias
        return self


class VirtualViewConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewConnectionGraphQLField":
        self._alias = alias
        return self


class VirtualViewEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewEdgeGraphQLField":
        self._alias = alias
        return self


class VirtualViewHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewHighlightGraphQLField":
        self._alias = alias
        return self


class VirtualViewLogicalIdGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewLogicalIdGraphQLField":
        self._alias = alias
        return self


class VirtualViewSchemaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewSchemaGraphQLField":
        self._alias = alias
        return self


class VirtualViewSchemaFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewSchemaFieldGraphQLField":
        self._alias = alias
        return self


class VirtualViewSearchDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewSearchDocumentGraphQLField":
        self._alias = alias
        return self


class VirtualViewSearchInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewSearchInfoGraphQLField":
        self._alias = alias
        return self


class VirtualViewSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VirtualViewSearchResultGraphQLField":
        self._alias = alias
        return self


class VolumeFileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VolumeFileGraphQLField":
        self._alias = alias
        return self


class WebhookGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookGraphQLField":
        self._alias = alias
        return self
