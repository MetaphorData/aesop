# Generated by ariadne-codegen
# Source: aesop/graphql/queries

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import DataPlatform


class SetNonProdSettings(BaseModel):
    update_settings: "SetNonProdSettingsUpdateSettings" = Field(alias="updateSettings")


class SetNonProdSettingsUpdateSettings(BaseModel):
    non_prod: Optional["SetNonProdSettingsUpdateSettingsNonProd"] = Field(
        alias="nonProd"
    )


class SetNonProdSettingsUpdateSettingsNonProd(BaseModel):
    dataset_patterns: List["SetNonProdSettingsUpdateSettingsNonProdDatasetPatterns"] = (
        Field(alias="datasetPatterns")
    )


class SetNonProdSettingsUpdateSettingsNonProdDatasetPatterns(BaseModel):
    platform: DataPlatform
    account: Optional[str]
    database: str
    schema_: str = Field(alias="schema")
    table: str
    is_case_sensitive: Optional[bool] = Field(alias="isCaseSensitive")


SetNonProdSettings.model_rebuild()
SetNonProdSettingsUpdateSettings.model_rebuild()
SetNonProdSettingsUpdateSettingsNonProd.model_rebuild()
