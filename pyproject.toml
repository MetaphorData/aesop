[tool.poetry]
name = "aesop"
version = "0.1.0"
description = "A CLI application for Metaphor data ingestion and upload"
authors = ["Metaphor <dev@metaphor.io>"]

[tool.poetry.dependencies]
aiohttp = "^3.9.5"
ariadne-codegen = { git = "https://github.com/mirumee/ariadne-codegen.git", rev = "11bfe35b" }
pydantic = "^2.0.0"
python = "^3.9"
pyyaml = "^6.0.2"
rich = "^13.3.5"
typer = "^0.9.0"

[tool.poetry.dev-dependencies]
autoflake = "^2.3.1"
black = "^24.2.0"
flake8 = "^7.0.0"
flake8-pyproject = "^1.2.3"
isort = "^5.11.0"
mypy = "^1.9.0"
poethepoet = "^0.28.0"
pre-commit = "^3.8.0"
pytest = "^8.2.1"
pytest-asyncio = "^0.23.7"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.black]
line-length = 88
target-version = ['py39']
extend-exclude = "aesop/graphql/generated"

[tool.isort]
profile = "black"
line_length = 88
skip_glob = ["aesop/graphql/generated/*"]

[tool.mypy]
ignore_missing_imports = true
strict = true
exclude = "aesop/graphql/generated/"

[tool.flake8]
ignore = ['E231', 'E241', 'W503']
max-line-length = 88
exclude = "aesop/graphql/generated"

[tool.autoflake]
check = true

# Add this section to create a CLI entry point
[tool.poetry.scripts]
aesop = "aesop.app:app"

[tool.ariadne-codegen]
schema_path = "schema.gql"
queries_path = "aesop/graphql/queries"
target_package_name = "generated"
target_package_path = "./aesop/graphql"
# convert_to_snake_case = false
async_client = false

[tool.poe.tasks]
_black = "black ."
_isort = "isort ."
format = ["_black", "_isort"]

[tool.poe.tasks.codegen]
help = "Generates the GraphQL client code from schema.gql. To run codegen, copy `@www/data/schema.gql` to the root directory, then run `poe codegen`."
cmd = "ariadne-codegen"
