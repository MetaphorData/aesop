---
name: Publish new version

env:
  PYTHON_VERSION: 3.9

on:
  workflow_dispatch:
    inputs:
      target_version:
        description: The version to publish
        required: true
        type: string

jobs:
  # 1. Check version
  #    - Checks if the provided version is valid (i.e. larger than current version). Fails if version is invalid.
  # 2. Bump version
  #    - Gets the commit sha from last release in `.github/release.sha1`.
  #    - Populates `CHANGELOG.md`.
  #    - Updates `.github/release.sha1`.
  #    - Updates the package version.
  #    - Creates a new commit to `main` branch, and a new tag for the provided version.
  # 3. Publish version
  #    - Pushes the new version to Pypi.
  check-version:
    name: Check version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup_environment

      - name: Check version
        run: |
          CURRENT_VERSION=$(poetry version --short 2>/dev/null)
          poetry run python ./.github/scripts/check_versions.py ${{ inputs.target_version }} $CURRENT_VERSION

  bump-version:
    name: Bump version
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - uses: getsentry/action-github-app-token@v2
        id: bot-token
        with:
          app_id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.bot-token.outputs.token }}

      - name: Create changelog
        run: |
          SHA=$(git rev-parse HEAD)
          OLD_SHA=$(cat ./.github/release.sha1)
          NEW_SHA=${{ github.event.inputs.commit || env.SHA }}
          echo -e '# '${{ inputs.target_version }}' CHANGELOG\n' > ./CHANGELOG.md
          git log --oneline ${OLD_SHA}..${NEW_SHA} >> ./CHANGELOG.md
          echo $NEW_SHA > ./.github/release.sha1

      - name: Setup environment
        uses: ./.github/actions/setup_environment

      - name: Bump version
        run: poetry version ${{ inputs.target_version }}

      - name: Commit, add tag, and push to main
        uses: EndBug/add-and-commit@v9.1.4
        with:
          default_author: github_actions
          tag: v${{ inputs.target_version }}

  publish-version:
    name: Publish version
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Publish to Pypi
        run: >
          poetry publish --build --skip-existing
          -u ${{ secrets.PYPI_USERNAME }}
          -p ${{ secrets.PYPI_PASSWORD }}
